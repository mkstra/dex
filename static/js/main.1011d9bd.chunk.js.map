{"version":3,"sources":["logo.svg","OrderForm.js","OrderTable.js","App.js","reportWebVitals.js","index.js"],"names":["OrderSchema","Yup","shape","veo","min","max","required","email","errorDiv","errors","touched","key","OrderForm","pair","buy","split","initialValues","onSubmit","values","alert","validationSchema","name","label","component","TextField","className","Button","variant","color","onClick","columns","field","headerName","width","type","pairOne","rows","id","orderType","amount","DataTable","useState","setBuy","createOrder","setCreateOrder","selection","setSelection","style","height","native","defaultValue","onChange","event","target","value","onRowSelected","data","filter","pageSize","class","centered","paddingLeft","paddingRight","App","exchange","setExchange","fetch","then","res","text","prices","parseFloat","JSON","parse","markets","map","last","last_change","id_hr","find","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1011d9bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Select } from \"material-ui-formik-components/Select\";\nimport { Autocomplete } from \"material-ui-formik-components/Autocomplete\";\nimport * as Yup from 'yup';\nimport { Button } from '@material-ui/core';\n\nconst OrderSchema = Yup.object().shape({\n  veo: Yup.number()\n    .min(0.1, 'Too Little!')\n    .max(10, 'Too Much!')\n    .required('Required'),\n\n  //  for async\n  email: Yup.string().email('Invalid email').required('Required'),\n  //waiting for buyer\n});\n\n\nconst errorDiv = (errors, touched, key) => errors[key] && touched[key] ? (\n  <div>{errors[key]}</div>\n) : null\n\nconst OrderForm = ({ pair, buy }) => (\n  <div>\n    <h1>{buy ? \"BUY\" : \"SELL\"} {pair.split(\"/\")[0]} for  {pair.split(\"/\")[1]}</h1>\n    <Formik\n      initialValues={{\n        veo: 1,\n        email: \"your@email.com\",\n      }}\n      onSubmit={values => {\n        alert(\n          values\n        );\n      }}\n      validationSchema={OrderSchema}\n    >\n      {({ errors, touched, values }) => (\n        <Form>\n          <div>\n            <Field name=\"veo\" label=\"Amount of VEO [0.1min, 10max] - for now\" component={TextField} />\n            {errorDiv(errors, touched, \"veo\")}\n            <Field name=\"email\" label=\"We notify you once the trade is live on the AMOVEO network\"\n              component={TextField} />\n            {errorDiv(errors, touched, \"email\")}\n\n          </div>\n\n\n\n\n          <div className=\"boldend\">\n            {buy ? \"BUY\" : \"SELL\"} {values.veo} {pair.split(\"/\")[0]} for  {pair.split(\"/\")[1]} {\" \"}\n            <Button variant=\"contained\" color={\"default\"} onClick={() => alert(\"ToDO: actual backend\")}>\n              Create Order\n                </Button>\n          </div>\n\n\n        </Form>\n      )}\n\n    </Formik>\n  </div>\n);\n\nexport default OrderForm;\n","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button } from '@material-ui/core';\nimport { Select } from '@material-ui/core';\nimport OrderForm from './OrderForm'\nimport \"react-toggle/style.css\" // for ES6 modules\nimport { useState } from 'react';\n\nconst columns = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'orderType', headerName: 'Order Type', width: 110 },\n    { field: 'pair', headerName: 'Pair', width: 110 },\n    {\n        field: 'amount',\n        headerName: 'Amount',\n        type: 'number',\n        width: 110,\n    },\n    //   {\n    //     field: 'fullName',\n    //     headerName: 'Full name',\n    //     description: 'This column has a value getter and is not sortable.',\n    //     sortable: false,\n    //     width: 160,\n    //     valueGetter: (params) =>\n    //       `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n    //   },\n];\n\nconst pairOne = \"VEO/BTC\"\n\nconst rows = [\n    { id: 1, orderType: 'buy', pair: pairOne, amount: 3 },\n    { id: 2, orderType: 'sell', pair: pairOne, amount: 2 },\n    { id: 3, orderType: 'buy', pair: pairOne, amount: 4 },\n    { id: 6, orderType: 'buy', pair: pairOne, amount: 1.5 },\n    { id: 7, orderType: 'buy', pair: pairOne, amount: 2.3 },\n    { id: 4, orderType: 'sell', pair: pairOne, amount: 1 },\n    { id: 9, orderType: 'sell', pair: pairOne, amount: 2.2 },\n    { id: 8, orderType: 'sell', pair: pairOne, amount: 11 },\n    { id: 10, orderType: 'sell', pair: pairOne, amount: 8.5 },\n];\n\n\nexport default function DataTable() {\n    const [buy, setBuy] = useState(true);\n    const [createOrder, setCreateOrder] = useState(false)\n    const [selection, setSelection] = useState(null)\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <Select\n                native\n                defaultValue={buy ? \"BUY\" : \"SELL\"}\n                onChange={event => {\n                    setBuy(event.target.value === \"buy\");\n                }\n                }\n            //   inputProps={{\n            //     name: 'age',\n            //     id: 'age-native-simple',\n            //   }}\n            >\n                <option value={\"buy\"}>BUY</option>\n                <option value={\"sell\"}>SELL</option>\n            </Select>\n            {\" VEO for BTC (at Market) from \"}\n            {/* OrderBook or create  */}\n\n            <Select\n                native\n                defaultValue={createOrder ? \"New Order\" : \"Order Book\"}\n                onChange={event => {\n                    setCreateOrder(event.target.value === \"2\");\n                }\n                }\n            //   inputProps={{\n            //     name: 'age',\n            //     id: 'age-native-simple',\n            //   }}\n            >\n                <option value={\"1\"}>Order Book</option>\n                <option value={\"2\"}>New Order</option>\n            </Select>\n\n            {/* \n                    {\" or \"}\n                <Button variant=\"contained\" color={createOrder ? \"primary\" : \"default\"} onClick={() => setCreateOrder(true)}>\n                    new order\n                </Button> */}\n            {createOrder ? <div>\n                <OrderForm buy={buy} pair={pairOne} />\n                {/* <Button color=\"default\" onClick={() => setCreateOrder(false)}>\n                        Close\n                        </Button> */}\n\n            </div>\n\n                :\n\n                <DataGrid\n                    onRowSelected={({ data }) => setSelection(data)}\n                    rows={rows.filter(({ orderType }) => buy ? orderType === \"sell\" : orderType === \"buy\")} columns={columns} pageSize={5} />\n\n\n            }\n            {(selection && !createOrder) &&\n\n                <div class=\"boldend\">\n                     \n                    <Button variant=\"contained\" color={\"default\"} onClick={() => alert(\"ToDO: actual backend\")}>\n                    {\"Match \"} {buy ? \"SELL\": \"BUY\"} \n                </Button>  \n                {\" order for \"} {selection.amount} {selection.pair.split(\"/\")[0]}\n                </div>\n            }\n\n\n\n\n\n\n\n        </div>\n    );\n}\n\n\n","import logo from './logo.svg';\nimport './App.css';\nimport OrderForm from './OrderForm'\nimport OrderTable from './OrderTable'\nimport {Fragment, useState} from 'react'\n\n\nconst centered = {\n  paddingLeft: 20 + \"vw\", paddingRight: 20+ \"vw\"\n  }\n\n\nconst pair = \"VEO_BTC\"\nconst findRateQTrade = (res, pair) => parseFloat(JSON.parse(res).data.markets\n.map(({last, last_change, id_hr}) => ({last, last_change, id_hr}))\n.find(p => p.id_hr == pair).last)\n\nfunction App() {\n  const [exchange, setExchange] = useState(null)\n  \n  fetch(\"https://api.qtrade.io/v1/tickers\").then(res=> res.text()).then(prices => setExchange(findRateQTrade(prices, pair)))\n\n  return (\n    <Fragment>\n\n{/*     \n    <div style={centered}>\n      <OrderForm />\n    \n    </div> */}\n\n      <div style={centered}>\n      {/* <div>...fully decentralized without having to trust any Exchange or opening an account</div> */}\n\n\n        {\"VEO/BTC - \"} {exchange}\n      <OrderTable />\n\n    </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}